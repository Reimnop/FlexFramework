#version 430
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(location = 0) uniform sampler2D inputTexture1;
layout(location = 1) uniform sampler2D inputTexture2;

layout(rgba16f, binding = 0) uniform image2D outputImage;

// source: http://www.iryoku.com/next-generation-post-processing-in-call-of-duty-advanced-warfare
void main() {
    ivec2 size = imageSize(outputImage);
    ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
    vec2 pixelSize = 1.0 / vec2(size);
    vec2 texCoord = pixelCoord / vec2(size) + pixelSize * 0.5;
    
    vec3 outputColor = texture(inputTexture1, texCoord).rgb + texture(inputTexture2, texCoord).rgb;
    imageStore(outputImage, pixelCoord, vec4(outputColor, 1.0));
}